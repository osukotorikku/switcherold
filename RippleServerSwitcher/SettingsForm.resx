<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label7.Text" xml:space="preserve">
    <value>The hosts files maps hostnames to IP addresses. It's used to redirect the osu! client traffic from the official server to Kotorikku. If the hosts file is not readable or writable, disabling your antivirus often works.
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAACAAAAAwAA
        AAQAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAEAAAABAAAAAQAAAAFAAAABQAAAAUAAAAFAAAABQAA
        AAUAAAAFAAAABAAAAAQAAAADAAAAAwAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAKAAAAEQAA
        ABsAAAAiAAAAOQAAAEYAAABIAAAASQAAAEgAAABJAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAA
        AEgAAABIAAAASQAAAEgAAABAAAAAKgAAACoAAAAyAAAALwAAAB0AAAAKAAAAAQAAAAAAAAACAAAABwAA
        ABUAAAAfAAAALgAAADsAAABbAAAAegAAAIcAAACrAAAAxwAAAN4AAADlAAAA+QAAAP8AAAD/AAAA+QAA
        AOUAAADeAAAAxwAAAKsAAACHAAAAfgAAAG8AAABHAAAAUwAAAGwAAAByAAAATAAAAB0AAAACAAAAAQAA
        AAAAAAADAAAACgAAAA8AAAAUAAAAHgAAADcAAACkAAAA+wwMDP8TExP/GBgY/xkZGf8eHh7/Hx8f/x8f
        H/8gICD/JCQk/yYmJv8aGhr/Dg4O/wAAAPsAAAClAAAARAAAAC0AAABuAAAAxwAAALEAAABOAAAACwAA
        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
        AAAAAAAoAAAAxQAAAO0AAAD5BgYG/xsbG/8wMDD/QUFB/0ZGRv9ERET/TExM/1JSUv9SUlL/TExM/0RE
        RP9GRkb/QUFB/zAwMP8bGxv/BgYG/wAAAPkAAADtAAAA6qGhof+7u7v/AAAAogAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAANoDAwP/Jycn/0NDQ/9NTU3/SkpK/0ZGRv9ERET/QkJC/0FBQf9BQUH/Pz8//z8/
        P/9BQUH/QUFB/0JCQv9ERET/RkZG/0pKSv9NTU3/Q0ND/ycnJ/8BAQH/oaGh/7u7u/8AAACPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABsDw8P/0ZGRv9DQ0P/Pj4+/zs7O/86Ojr/NDQ0/ysrK/8nJyf/JSUl/yEh
        If8hISH/ISEh/yEhIf8lJSX/Jycn/ysrK/80NDT/Ojo6/zs7O/8+Pj7/Q0ND/yEhIf+hoaH/u7u7/wAA
        AIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANVBQUH/Ozs7/zY2Nv81NTX/NTU1/yEhIf8WFhb/FxcX/xgY
        GP8ZGRn/Ghoa/xoaGv8aGhr/Ghoa/xkZGf8YGBj/FxcX/xYWFv8hISH/NTU1/zU1Nf82Njb/HBwc/6Gh
        of+7u7v/AAAAhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA20BAQP82Njb/MTEx/zAwMP8wMDD/HR0d/xQU
        FP8UFBT/FRUV/xUVFf8VFRX/FRUV/xUVFf8VFRX/FRUV/xUVFf8UFBT/FBQU/x0dHf8wMDD/MDAw/zEx
        Mf8aGhr/oaGh/7u7u/8AAACDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByDQ0N/zo6Ov82Njb/MDAw/y0t
        Lf8sLCz/KCgo/yEhIf8dHR3/Gxsb/xgYGP8UFBT/FBQU/xgYGP8bGxv/HR0d/yEhIf8oKCj/LCws/y0t
        Lf8wMDD/NjY2/yUlJf/j4+P/4+Pj/wAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAwMD/x4e
        Hv8zMzP/ODg4/zQ0NP8wMDD/LS0t/ysrK/8rKyv/Kioq/ykpKf8pKSn/Kioq/ysrK/8rKyv/LS0t/zAw
        MP80NDT/ODg4/zMzM/8eHh7/AgIC/wAAAKYAAABQAAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAJAAAAaQAAAMwEBAT/ExMT/yIiIv8sLCz/MTEx/y8vL/8yMjL/NjY2/zY2Nv8yMjL/Ly8v/zEx
        Mf8sLCz/IiIi/xMTE/8EBAT/AAAAzAAAAGkAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAABFAAAAfgAAAK4AAADMAAAAzAAAAOEAAAD/AAAA/wAA
        AOEAAADMAAAAzAAAAK4AAAB+AAAARQAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////wAAAB4AAAAEAAAAAgAAAAcAA
        AAf8AACH/AAAh/4AAYf+AAGH/gABh/4AAYf+AAGH/gABh/4AAYf+AAGH/gABh/AAAAfgAAAH4AAAB8AA
        AAfAAAAHwAAAB8AAAAfgAAAH8AAAP/4AAf//////////////////////KAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQBCwsLBwwMDBAMDAwiDAwMJg0NDSYPDw8mDg4OJg8P
        DyYODg4mDQ0NJgwMDCQMDAwWCwsLGQkJCQoAAAAAFBQUAwAAABMAAAAmAAAAbAMDA8sKCgroDQ0N9w8P
        D/8RERH3EBAQ6AMDA8sAAAB1AAAATQAAAJUAAAAwEhISAQAAAAAAAAAAHx8fAXFxcYcrKyv/Kioq/ygo
        KP8nJyf/MjIy/zw8PP8uLi7/cHBwhxAQEG8cHBz/CgoKZwAAAAAAAAAAAAAAAAAAAAAgICCBMjIy/y4u
        Lv8qKir/KSkp/zU1Nf9DQ0P/NTU1/x4eHoEWFhZ/Kysr/wwMDH8AAAAAAAAAAAAAAAAAAAAAICAgfzY2
        Nv8uLi7/Kioq/ykpKf81NTX/Q0ND/zk5Of8eHh5/GBgYfy0tLf8NDQ1/AAAAAAAAAAAAAAAAAAAAAB0d
        HX04ODj/Li4u/yoqKv8pKSn/NTU1/0NDQ/87Ozv/HBwcfRsbG38tLS3/ERERfwAAAAAAAAAAAAAAAAAA
        AAAtLS14m5ub/7u7u/+rq6v/o6Oj/7Kysv/j4+P/qqqq/y0tLXgeHh5/LS0t/xYWFn8AAAAAAAAAAAAA
        AAAAAAAANTU1daKiov+JiYn/cXFx/1tbW/91dXX/pqam/7S0tP83Nzd0Hh4efy0tLf8YGBh/AAAAAAAA
        AAAjIyMKAAAAhgICAukaGhr/JCQk/yUlJf8pKSn/JSUl/yUlJf8aGhr/AgIC6QAAAMiZmZn/GRkZYwAA
        AAAAAAAADg4OkSwsLP9CQkL/Pz8//zY2Nv8yMjL/MDAw/zIyMv82Njb/Pz8//0JCQv8jIyP/rq6u/xkZ
        GUUAAAAAAAAAACAgIOs2Njb/MjIy/xoaGv8WFhb/FxcX/xcXF/8XFxf/FhYW/xoaGv8yMjL/Jycn/66u
        rv8bGxtCAAAAAAAAAAALCwt4JCQk/zIyMv8uLi7/JSUl/yIiIv8eHh7/IiIi/yUlJf8uLi7/MjIy/x4e
        Hv9xcXG9GxsbGgAAAAAAAAAAAAAAABERERwJCQl2DQ0NsBcXF94YGBjqGxsb/xgYGOoXFxfeDQ0NsA0N
        DXYYGBgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAAAAEAAAAAAADAAQAA4AEAAOABAADgAQAA4AEAAOAB
        AACAAQAAgAEAAIABAACAAQAAwAcAAP//AAD//wAA
</value>
  </data>
</root>